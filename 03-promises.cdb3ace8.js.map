{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAM,CACVC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAIM,OAAOC,iBAAiB,SAM5B,SAAgBC,GAKd,GAJAA,EAAMC,iBACNC,EAAQC,OAAOX,EAAIC,MAAMW,OACzBC,EAAOF,OAAOX,EAAII,KAAKQ,OACvBP,OAASM,OAAOX,EAAIK,OAAOO,OACvBF,GAASG,GAAQR,OAAS,EAEL,YADvBP,EAAAgB,OAAOC,QAAQ,6BAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAIK,OAAOO,MAAOI,GAAK,EAC1CC,EAAWD,EAEXE,EAAcD,EAAUP,GACrBS,MAAK,EAAGC,SAAAC,EAAUpB,MAAAqB,MACrBxB,EAAAgB,OAAOS,QAAQ,uBAAqBF,QAAiBC,UAGlDE,OAAM,EAAGJ,SAAAK,EAAUxB,MAAAyB,MACtB5B,EAAAgB,OAAOC,QAAQ,sBAAoBU,QAAeC,UAIlDhB,GAASG,KA1Bb,IAEII,EAFAP,EAAQ,KACRG,EAAO,KA8BX,SAASK,EAAcS,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAENF,EAAQ,CAAEV,SAAAO,EAAU1B,MAAA2B,IAEjBG,EAAO,CAAEX,SAAAO,EAAU1B,MAAA2B,MAErBA","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('[type=\"submit\"]'),\n}\n\nref.button.addEventListener(\"click\", create);\n\nlet delay = null;\nlet step = null;\nlet position;\n\nfunction create(event) {\n  event.preventDefault();\n  delay = Number(ref.delay.value);\n  step = Number(ref.step.value);\n  amount = Number(ref.amount.value);\n  if (delay || step || amount < 0) {\n    Notify.failure(`Введите плюсовые значения`)\n    return;\n  }\n  for (let i = 1; i <= ref.amount.value; i += 1){\n    position = i;\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    \n  })\n      .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    \n  });\n   \n    delay += step;\n};\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n      \n    resolve({ position, delay });\n  } else {\n       reject({ position, delay });\n  }\n  }, delay);\n  })\n \n \n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$ref","delay","document","querySelector","step","amount","button","addEventListener","event","preventDefault","$47d4ff9957288465$var$delay","Number","value","$47d4ff9957288465$var$step","Notify","failure","i","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","then","position","position1","delay1","success","catch","position2","delay2","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.cdb3ace8.js.map"}