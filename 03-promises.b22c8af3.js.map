{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAM,CACVC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAIM,OAAOC,iBAAiB,SAO5B,SAAgBC,GAMd,GALAA,EAAMC,iBACNC,EAAQC,OAAOX,EAAIC,MAAMW,OACzBC,EAAOF,OAAOX,EAAII,KAAKQ,OACvBE,EAASH,OAAOX,EAAIK,OAAOO,OAEvBF,EAAO,GAAKG,EAAM,GAAKC,EAAS,EAEX,YADnBhB,EAAAiB,OAAOC,QAAS,6BAGtB,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAIK,OAAOO,MAAOK,GAAK,EAG1CC,EAFWD,EAEaP,GACrBS,MAAK,SAAAC,OAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALnB,MACrBH,EAAAiB,OAAOS,QAAS,uBAAuCC,OAAfJ,EAAS,QAAYI,OAANF,EAAM,UAG1DG,OAAM,SAAAN,OAAGO,EAAQP,EAARE,SAAUM,EAAKR,EAALnB,MACtBH,EAAAiB,OAAOC,QAAS,sBAAoCS,OAAfE,EAAS,QAAYF,OAANG,EAAM,UAI1DlB,GAASG,KA5Bb,IAAIH,EAAQ,KACRG,EAAO,KACPC,EAAS,KA+Bb,SAASI,EAAcW,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAENF,EAAQ,CAAEV,SAAAO,EAAU5B,MAAA6B,IAEjBG,EAAO,CAAEX,SAAAO,EAAU5B,MAAA6B,MAErBA","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('[type=\"submit\"]'),\n}\n\nref.button.addEventListener(\"click\", create);\n\nlet delay = null;\nlet step = null;\nlet amount = null;\nlet position;\n\nfunction create(event) {\n  event.preventDefault();\n  delay = Number(ref.delay.value);\n  step = Number(ref.step.value);\n  amount = Number(ref.amount.value);\n \n  if (delay< 0 || step< 0 || amount < 0) {\n        Notify.failure(`Введите плюсовые значения`)\n    return;\n  }\n  for (let i = 1; i <= ref.amount.value; i += 1){\n    position = i;\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    \n  })\n      .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    \n  });\n   \n    delay += step;\n};\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n      \n    resolve({ position, delay });\n  } else {\n       reject({ position, delay });\n  }\n  }, delay);\n  })\n \n \n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$ref","delay","document","querySelector","step","amount","button","addEventListener","event","preventDefault","$ce04d3a99e08e73b$var$delay","Number","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","Notify","failure","i","$ce04d3a99e08e73b$var$createPromise","then","param","position1","position","delay1","success","concat","catch","position2","delay2","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.b22c8af3.js.map"}